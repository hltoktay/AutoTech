{"version":3,"sources":["DrawerRouter.test.tsx"],"names":["INIT_ACTION","type","NavigationActions","INIT","it","ScreenA","ScreenB","router","Foo","screen","Bar","state","getStateForAction","expectedState","index","isTransitioning","routes","key","routeName","params","undefined","isDrawerOpen","expect","toEqual","state2","NAVIGATE","expectedState2","getComponentForState","FooScreen","BarScreen","initialRouteName","DrawerActions","OPEN_DRAWER","state3","CLOSE_DRAWER","state4","TOGGLE_DRAWER","action","lastState","changed","FooView","React","Component","BarRouter","Qux","Quo","BarView","emptyState","init","initState","openDrawer","toBe","state0","navigate","initSwitchState","initQuxState","state1","setParams","foo","state1switchState","state1quxState","DrawerScreen","Baz","Drawer","DRAWER_OPENED","back"],"mappings":"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","sourcesContent":["/* eslint react/display-name:0 */\n\nimport * as React from 'react';\nimport DrawerRouter from '../DrawerRouter';\n\nimport { NavigationActions, SwitchRouter, StackRouter } from 'react-navigation';\nimport * as DrawerActions from '../../routers/DrawerActions';\n\nconst INIT_ACTION = { type: NavigationActions.INIT };\n\nit('handles basic drawer logic and fires close on switch', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n  const expectedState = {\n    index: 0,\n    isTransitioning: false,\n    routes: [\n      { key: 'Foo', routeName: 'Foo', params: undefined },\n      { key: 'Bar', routeName: 'Bar', params: undefined },\n    ],\n    isDrawerOpen: false,\n  };\n  expect(state).toEqual(expectedState);\n  const state2 = router.getStateForAction(\n    { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n    state\n  );\n  const expectedState2 = {\n    index: 1,\n    isTransitioning: false,\n    routes: [\n      { key: 'Foo', routeName: 'Foo', params: undefined },\n      { key: 'Bar', routeName: 'Bar', params: undefined },\n    ],\n    isDrawerOpen: false,\n  };\n  expect(state2).toEqual(expectedState2);\n  expect(router.getComponentForState(expectedState)).toEqual(ScreenA);\n  expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);\n});\n\nit('handles initial route navigation', () => {\n  const FooScreen = () => <div />;\n  const BarScreen = () => <div />;\n  const router = DrawerRouter(\n    {\n      Foo: {\n        screen: FooScreen,\n      },\n      Bar: {\n        screen: BarScreen,\n      },\n    },\n    { initialRouteName: 'Bar' }\n  );\n  const state = router.getStateForAction({\n    type: NavigationActions.NAVIGATE,\n    routeName: 'Foo',\n  });\n  expect(state).toEqual({\n    index: 0,\n    isDrawerOpen: false,\n    isTransitioning: false,\n    routes: [\n      {\n        key: 'Foo',\n        params: undefined,\n        routeName: 'Foo',\n      },\n      {\n        key: 'Bar',\n        params: undefined,\n        routeName: 'Bar',\n      },\n    ],\n  });\n});\n\nit('drawer opens, closes and toggles', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n\n  expect(state.isDrawerOpen).toEqual(false);\n\n  const state2 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER },\n    state\n  );\n\n  expect(state2.isDrawerOpen).toEqual(true);\n\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.CLOSE_DRAWER },\n    state2\n  );\n\n  expect(state3.isDrawerOpen).toEqual(false);\n\n  const state4 = router.getStateForAction(\n    { type: DrawerActions.TOGGLE_DRAWER },\n    state3\n  );\n\n  expect(state4.isDrawerOpen).toEqual(true);\n});\n\nit('drawer opens, closes with key targeted', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n  const state2 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER, key: 'wrong' },\n    state\n  );\n\n  expect(state2.isDrawerOpen).toEqual(false);\n\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER, key: state.key },\n    state2\n  );\n\n  expect(state3.isDrawerOpen).toEqual(true);\n});\n\nit('nested routers bubble up blocked actions', () => {\n  const ScreenA = () => <div />;\n  ScreenA.router = {\n    getStateForAction(action: { type: string }, lastState: any) {\n      if (action.type === 'CHILD_ACTION') return null;\n      return lastState;\n    },\n  };\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n\n  const state2 = router.getStateForAction({ type: 'CHILD_ACTION' }, state);\n  expect(state2).toEqual(null);\n});\n\nit('drawer does not fire close when child routers return new state', () => {\n  const ScreenA = () => <div />;\n  ScreenA.router = {\n    getStateForAction(\n      action: { type: string },\n      lastState = { changed: false }\n    ) {\n      if (action.type === 'CHILD_ACTION')\n        return { ...lastState, changed: true };\n      return lastState;\n    },\n  };\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n  });\n\n  const state = router.getStateForAction(INIT_ACTION);\n  expect(state.isDrawerOpen).toEqual(false);\n\n  const state2 = router.getStateForAction({ type: 'CHILD_ACTION' }, state);\n  expect(state2.isDrawerOpen).toEqual(false);\n  expect(state2.routes[0].changed).toEqual(true);\n});\n\nit('drawerRouter will close drawer on child navigaton, not on child param changes', () => {\n  class FooView extends React.Component {\n    render() {\n      return <div />;\n    }\n  }\n  const BarRouter = SwitchRouter({\n    Qux: FooView,\n    Quo: FooView,\n  });\n  class BarView extends React.Component {\n    static router = BarRouter;\n    render() {\n      return <div />;\n    }\n  }\n  const router = DrawerRouter({\n    Bar: BarView,\n    Foo: FooView,\n  });\n\n  const emptyState = router.getStateForAction(NavigationActions.init());\n  const initState = router.getStateForAction(\n    DrawerActions.openDrawer(),\n    emptyState\n  );\n  expect(initState.isDrawerOpen).toBe(true);\n\n  const state0 = router.getStateForAction(\n    NavigationActions.navigate({ routeName: 'Quo' }),\n    initState\n  );\n  expect(state0.isDrawerOpen).toBe(false);\n\n  const initSwitchState = initState.routes[initState.index];\n  const initQuxState = initSwitchState.routes[initSwitchState.index];\n\n  const state1 = router.getStateForAction(\n    NavigationActions.setParams({\n      key: initQuxState.key,\n      params: { foo: 'bar' },\n    }),\n    initState\n  );\n  const state1switchState = state1.routes[state1.index];\n  const state1quxState = state1switchState.routes[state1switchState.index];\n  expect(state1.isDrawerOpen).toBe(true); // don't fire close\n  expect(state1quxState.params.foo).toEqual('bar');\n});\n\nit('goBack closes drawer when inside of stack', () => {\n  const ScreenA = () => <div />;\n  const DrawerScreen = () => <div />;\n  DrawerScreen.router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenA },\n  });\n  const router = StackRouter({\n    Baz: { screen: ScreenA },\n    Drawer: { screen: DrawerScreen },\n  });\n  const state0 = router.getStateForAction(INIT_ACTION);\n  expect(state0.index).toEqual(0);\n  const state1 = router.getStateForAction(\n    NavigationActions.navigate({ routeName: 'Foo' }),\n    state0\n  );\n  expect(state1.index).toEqual(1);\n  const state2 = router.getStateForAction(DrawerActions.openDrawer(), state1);\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.DRAWER_OPENED },\n    state2\n  );\n  expect(state3.index).toEqual(1);\n  expect(state3.routes[1].isDrawerOpen).toEqual(true);\n  const state4 = router.getStateForAction(NavigationActions.back(), state3);\n  expect(state4.routes[1].isDrawerOpen).toEqual(false);\n});\n"]}