{"version":3,"sources":["TouchableItem.tsx"],"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","ANDROID_VERSION_LOLLIPOP","TouchableItem","OS","Version","props","style","rest","Ripple","pressColor","borderless","Children","only","children","Component","defaultProps"],"mappings":"qkBASA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,QADF,CAEEC,uBAFF,CAGEC,gBAHF,CAIEC,IAJF,KAMO,cANP,CAQA,GAAMC,CAAAA,wBAAwB,CAAG,EAAjC,C,GAOqBC,CAAAA,a,kSAMV,CASP,GACEL,QAAQ,CAACM,EAAT,GAAgB,SAAhB,EACAN,QAAQ,CAACO,OAAT,EAAoBH,wBAFtB,CAGE,iBAC2B,KAAKI,KADhC,CACQC,KADR,aACQA,KADR,CACkBC,IADlB,iDAEA,MACE,qBAAC,uBAAD,aACMA,IADN,EAEE,KAAK,CAAE,IAFT,CAGE,UAAU,CAAET,uBAAuB,CAACU,MAAxB,CACV,KAAKH,KAAL,CAAWI,UADD,CAEV,KAAKJ,KAAL,CAAWK,UAFD,CAHd,kDAQE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,KAAb,iDAAqBV,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAoB,KAAKP,KAAL,CAAWQ,QAA/B,CAArB,CARF,CADF,CAYD,CAED,MACE,qBAAC,gBAAD,aAAsB,KAAKR,KAA3B,mDAAmC,KAAKA,KAAL,CAAWQ,QAA9C,CADF,CAGD,C,2BArCwCjB,KAAK,CAACkB,S,EAA5BZ,a,CACZa,Y,CAAe,CACpBL,UAAU,CAAE,KADQ,CAEpBD,UAAU,CAAE,oBAFQ,C,QADHP,a","sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  pressColor: string;\n  borderless: boolean;\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    }\n\n    return (\n      <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>\n    );\n  }\n}\n"]}